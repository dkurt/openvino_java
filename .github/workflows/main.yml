name: CI

on:
  push:
    branches: [ main ]
  pull_request:

env:
  OPENVINO_TAG: 2021.4
  BASE_VERSION: 2021.4

jobs:
  run_linux:
    runs-on: ubuntu-18.04
    name: Build on Linux

    steps:
    - name: Clone repository
      uses: actions/checkout@v2

    - name: Clone
      run: |
        git clone -b update_artifactory https://github.com/dkurt/openvino_contrib --depth 1
        git clone https://github.com/openvinotoolkit/testdata --depth 1

    - name: Install Java
      uses: actions/setup-java@v1
      with:
        java-version: '11.0.2'

    - name: Download OpenVINO
      run: |
        wget -q https://registrationcenter-download.intel.com/akdlm/irc_nas/17988/l_openvino_toolkit_p_2021.4.582.tgz
        tar -xf l_openvino_toolkit_p_2021.4.582.tgz
        cd l_openvino_toolkit_p_2021.4.582
        sudo ./install.sh --silent --accept_eula --install_dir /opt/intel
        sudo ln -s /opt/intel/openvino_2021 /opt/intel/openvino

    - name: Build bindings
      run: |
        mkdir build_api && cd build_api
        cmake ../openvino_contrib/modules/java_api \
          -DCMAKE_BUILD_TYPE=Release \
          -DENABLE_TESTS=OFF \
          -DCMAKE_CXX_FLAGS=-I\ /opt/intel/openvino/inference_engine/include/ \
          -DCMAKE_SHARED_LINKER_FLAGS=-L\ /opt/intel/openvino/inference_engine/lib/intel64/
        make -j$(nproc --all)

    - name: Publish
      env:
        ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
        ARTIFACTORY_PASS: ${{ secrets.ARTIFACTORY_PASS }}
        VERSION: "${{env.BASE_VERSION}}-linux-x86_64"
      run: |
        cd openvino_contrib/modules/java_api
        mkdir native
        mv ../../../build_api/*.so native
        cp /opt/intel/openvino/deployment_tools/ngraph/lib/lib* native
        cp /opt/intel/openvino/inference_engine/external/tbb/lib/lib* native
        cp /opt/intel/openvino/inference_engine/lib/intel64/lib* native
        cp /opt/intel/openvino/inference_engine/lib/intel64/plugins.xml native
        cp /opt/intel/openvino/inference_engine/lib/intel64/cache.json native
        cp /opt/intel/openvino/inference_engine/lib/intel64/*.mvcmd native
        ls native > resources_list.txt && cat resources_list.txt && mv resources_list.txt native

        gradle clean build -Prun_tests -PMODELS_PATH=../../../testdata --info

  # run_win:
  #   runs-on: windows-latest
  #   name: Build on Windows
  #
  #   steps:
  #   - name: Clone repository
  #     uses: actions/checkout@v2
  #
  #   - name: Clone
  #     run: |
  #       git clone -b update_artifactory https://github.com/dkurt/openvino_contrib --depth 1
  #       git clone https://github.com/openvinotoolkit/testdata --depth 1
  #
  #   - name: Install Java
  #     uses: actions/setup-java@v1
  #     with:
  #       java-version: '11.0.2'
  #
  #   - name: Download OpenVINO
  #     run: |
  #       curl https://registrationcenter-download.intel.com/akdlm/irc_nas/17661/w_openvino_toolkit_p_2021.3.394.exe -o openvino.exe
  #       start /WAIT openvino.exe --s --a install --eula=accept --output=log.txt
  #     shell: cmd
  #
  #   - name: Build bindings
  #     run: |
  #       mkdir build_api && cd build_api
  #       cmake -G "Visual Studio 16 2019" -A x64 ..\openvino_contrib\modules\java_api ^
  #         -DCMAKE_BUILD_TYPE=Release ^
  #         -DENABLE_TESTS=OFF ^
  #         -DCMAKE_CXX_FLAGS="-I\"C:\Program Files (x86)\Intel\openvino_2021\deployment_tools\inference_engine\include"" ^
  #         -DCMAKE_SHARED_LINKER_FLAGS="/LIBPATH:\"C:\Program Files (x86)\Intel\openvino_2021\deployment_tools\inference_engine\lib\intel64\Release""
  #       cmake --build . --config Release -j 2
  #     shell: cmd
  #
  #   - name: Publish
  #     env:
  #       ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
  #       ARTIFACTORY_PASS: ${{ secrets.ARTIFACTORY_PASS }}
  #       VERSION: "${{env.BASE_VERSION}}-windows-x86_64"
  #     run: |
  #       set OPENVINO_DIR="C:\Program Files (x86)\Intel\openvino_2021\deployment_tools\inference_engine"
  #       cd openvino_contrib\modules\java_api
  #       mkdir native
  #       move ..\\..\\..\\build_api\\Release\\*.dll native
  #       move %OPENVINO_DIR%\bin\intel64\Release\*.dll native
  #       move %OPENVINO_DIR%\bin\intel64\Release\plugins.xml native
  #       move %OPENVINO_DIR%\bin\intel64\Release\cache.json native
  #       move %OPENVINO_DIR%\bin\intel64\Release\*.mvcmd native
  #       move %OPENVINO_DIR%\external\tbb\bin\tbb.dll native
  #       move %OPENVINO_DIR%\external\tbb\bin\tbbmalloc.dll native
  #       move %OPENVINO_DIR%\..\ngraph\lib\ngraph.dll native
  #       move %OPENVINO_DIR%\..\ngraph\lib\onnx_importer.dll native
  #       dir /b /a-d native >resources_list.txt
  #       move resources_list.txt native
  #
  #       gradle clean build -Prun_tests -PMODELS_PATH=..\\..\\..\\testdata --info
  #     shell: cmd

  # run_mac:
  #   runs-on: macos-latest
  #   name: Build on Mac
  #
  #   steps:
  #   - name: Clone repository
  #     uses: actions/checkout@v2
  #
  #   - name: Clone
  #     run: |
  #       git clone -b ${{env.OPENVINO_TAG}} https://github.com/openvinotoolkit/openvino --depth 1
  #       git clone -b update_artifactory https://github.com/dkurt/openvino_contrib --depth 1
  #       git clone https://github.com/openvinotoolkit/testdata --depth 1
  #
  #   - name: Install Java
  #     uses: actions/setup-java@v1
  #     with:
  #       java-version: '11.0.2'
  #
  #   - uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.7'
  #
  #   - name: Download OpenVINO
  #     run: |
  #       python3.7 -m venv ov_venv
  #       source ov_venv/bin/activate
  #       python3.7 -m pip install --upgrade pip
  #       python3.7 -m pip install openvino==${{env.OPENVINO_TAG}}
  #
  #   - name: Build bindings
  #     run: |
  #       mkdir build_api && cd build_api
  #       cmake ../openvino_contrib/modules/java_api \
  #         -DCMAKE_BUILD_TYPE=Release \
  #         -DENABLE_TESTS=OFF \
  #         -DCMAKE_CXX_FLAGS="-std=c++11 -I ../openvino/inference-engine/include/" \
  #         -DCMAKE_SHARED_LINKER_FLAGS=-L\ ../ov_venv/lib/python3.7/site-packages/openvino/libs/
  #       make -j$(nproc --all)
  #
  #   - name: Publish
  #     env:
  #       ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
  #       ARTIFACTORY_PASS: ${{ secrets.ARTIFACTORY_PASS }}
  #       VERSION: "${{env.BASE_VERSION}}-macosx-x86_64"
  #     run: |
  #       cd openvino_contrib/modules/java_api
  #       mkdir native
  #       mv ../../../build_api/*.dylib native
  #       mv ../../../ov_venv/lib/python3.7/site-packages/openvino/libs/lib* native
  #       mv ../../../ov_venv/lib/python3.7/site-packages/openvino/libs/plugins.xml native
  #       mv ../../../ov_venv/lib/python3.7/site-packages/openvino/libs/*.mvcmd native
  #       ls native > resources_list.txt && cat resources_list.txt && mv resources_list.txt native
  #
  #       gradle clean build bintrayUpload -Prun_tests -PMODELS_PATH=../../../testdata --info
