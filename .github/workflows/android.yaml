name: Build for Android

on: [workflow_dispatch, pull_request]

jobs:
  build_android:
    runs-on: ubuntu-20.04
    name: Build for Android

    steps:
    - name: Clone repository
      uses: actions/checkout@v2

    - name: Download Gradle
      run: |
        wget -q https://downloads.gradle-dn.com/distributions/gradle-6.5-bin.zip
        unzip gradle-6.5-bin.zip

    - name: Download NDK
      run: |
        wget -q https://dl.google.com/android/repository/android-ndk-r20-linux-x86_64.zip
        unzip android-ndk-r20-linux-x86_64.zip
        mv android-ndk-r20 android-ndk

    - name: Clone
      run: |
        git clone --recurse-submodules -j$(nproc --all) https://github.com/openvinotoolkit/openvino_contrib --depth 1
        git clone --recurse-submodules -j$(nproc --all) https://github.com/openvinotoolkit/openvino -b releases/2022/2
        cd openvino && echo "https://github.com/openvinotoolkit/openvino/commit/$(git rev-parse HEAD)" > ../versions.txt && cd ..
        cd openvino_contrib && echo "https://github.com/openvinotoolkit/openvino_contrib/commit/$(git rev-parse HEAD)" >> ../versions.txt && cd ..

    - name: Upload versions.txt
      uses: actions/upload-artifact@v2
      with:
        name: "versions"
        path: "versions.txt"

    - name: Install Java
      uses: actions/setup-java@v1
      with:
        java-version: '11.0.2'

    - name: Install dependencies
      run: |
        sudo apt-get install -y scons

    - name: Download SDK
      run: |
         wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
         unzip commandlinetools-linux-8512546_latest.zip -d sdk
         yes | ./sdk/cmdline-tools/bin/sdkmanager --licenses --sdk_root=./sdk/
      working-directory: openvino_contrib/modules/java_api

    - name: Build OpenVINO (ARM64)
      run: |
        cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=21 \
          -DANDROID_STL=c++_shared \
          -DCMAKE_STRIP=$(realpath android-ndk/toolchains/llvm/prebuilt/linux-x86_64/aarch64-linux-android/bin/strip) \
          -DENABLE_INTEL_MYRIAD=OFF \
          -DENABLE_CLDNN=OFF \
          -DENABLE_OPENCV=OFF \
          -DENABLE_TEMPLATE=OFF \
          -DENABLE_SAMPLES=OFF \
          -DTHREADING=SEQ \
          -DBUILD_nvidia_plugin=OFF \
          -DIE_EXTRA_MODULES=$(realpath openvino_contrib/modules) \
          -DCMAKE_TOOLCHAIN_FILE=$(realpath android-ndk/build/cmake/android.toolchain.cmake) \
          -S openvino -B openvino_build_arm64

        cmake --build openvino_build_arm64 -j$(nproc --all)
        cmake --install openvino_build_arm64 --prefix openvino_install_arm64

        android-ndk/toolchains/llvm/prebuilt/linux-x86_64/aarch64-linux-android/bin/strip openvino_install_x86/runtime/lib/aarch64/*.so

        rm -r openvino_build_x86
        rm -r openvino/bin
        mv openvino_install_arm64/runtime/lib/aarch64 openvino_install_arm64/runtime/lib/arm64-v8a

    - name: Build package (ARM64)
      run: |
        source ../../../openvino_install_arm64/setupvars.sh
        export ANDROID_SDK_ROOT=$(realpath ./sdk)

        mkdir -p src/main/
        cp ../../../AndroidManifest.xml src/main/
        cp ../../../build_android.gradle build.gradle

        ../../../gradle-6.5/bin/gradle clean build -x lint --info
      working-directory: openvino_contrib/modules/java_api

    - name: Upload (ARM64)
      uses: actions/upload-artifact@v2
      with:
        name: "pkg_android_arm64"
        path: "openvino_contrib/modules/java_api/build/outputs/aar/*-release.aar"

    - name: Build OpenVINO (x86_64)
      run: |
        cmake \
          -DANDROID_ABI=x86_64 \
          -DANDROID_PLATFORM=21 \
          -DANDROID_STL=c++_shared \
          -DENABLE_CLDNN=OFF \
          -DENABLE_OPENCV=OFF \
          -DENABLE_TEMPLATE=OFF \
          -DENABLE_SAMPLES=OFF \
          -DBUILD_nvidia_plugin=OFF \
          -DIE_EXTRA_MODULES=$(realpath openvino_contrib/modules) \
          -DCMAKE_TOOLCHAIN_FILE=$(realpath android-ndk/build/cmake/android.toolchain.cmake) \
          -S openvino -B openvino_build_x86

        cmake --build openvino_build_x86 -j$(nproc --all)
        cmake --install openvino_build_x86 --prefix openvino_install_x86
        android-ndk/toolchains/llvm/prebuilt/linux-x86_64/x86_64-linux-android/bin/strip openvino_install_x86/runtime/lib/intel64/*.so

        rm -r openvino_build_x86
        rm -r openvino/bin
        mv openvino_install_x86/runtime/lib/intel64 openvino_install_x86/runtime/lib/x86_64

    - name: Build package (x86_64)
      run: |
        source ../../../openvino_install_x86/setupvars.sh
        export ANDROID_SDK_ROOT=$(realpath ./sdk)

        mkdir -p src/main/
        cp ../../../AndroidManifest.xml src/main/
        cp ../../../build_android.gradle build.gradle

        ../../../gradle-6.5/bin/gradle clean build -x lint --info
      working-directory: openvino_contrib/modules/java_api

    - name: Upload (x86_64)
      uses: actions/upload-artifact@v2
      with:
        name: "pkg_android_x86"
        path: "openvino_contrib/modules/java_api/build/outputs/aar/*-release.aar"
